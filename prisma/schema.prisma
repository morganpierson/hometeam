// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

//User = IC within a team including admin
model User {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  clerkId String @unique
  email String @unique
  isAdmin Boolean?
  profileImage String?
  name String?
  role String?
  employmentStart DateTime?
  employmentEnd DateTime?
  availableForAcquisition Boolean @default(false)
  referralsReceived User[] @relation("UserReferences")
  referralsProvided User[] @relation("UserReferences")
  projects String?
  team Team? @relation(fields: [teamId], references: [id])
  teamId String?
  acquisitionOffer AcquisitionOffer?
  company Company? @relation(fields: [companyId], references: [id])
  companyId String?
  resume String?

  @@index([companyId])
  @@index([teamId])
}

//AqcquisitionOffer = terms under which a company is offering up an employee or willing to release an employee
model AcquisitionOffer {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  offer String?
  request String?
}

//Company = Company under which many Users & Teams work. Companies create AcquisitionOffers
model Company {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  employees User[]
  name String
  size String
  industries Industry[]
  teams Team[] 
}

//Teams are subset of Company. Teams produce projects with ICs
model Team {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  members User[]
  name String
  projects Project[]
  company Company? @relation(fields: [companyId], references: [id])
  companyId String?

  @@index([companyId])
}

//Project = contributions by teams and ICs. Technical and non-technical
model Project {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title String
  businessWeight Int @default(0)
  description String @db.Text
  // contributors User[]
  teams Team[]
}

//Industry = markets in which a company operates (e.g. SaaS, eCommerce, AI/ML). Companies can operate within multiple Industries
model Industry {
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String 
  companies Company[] 
}